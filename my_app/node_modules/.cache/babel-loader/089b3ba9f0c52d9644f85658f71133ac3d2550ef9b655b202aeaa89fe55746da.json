{"ast":null,"code":"import { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT\n// USER_REGISTER_FAIL,\n// USER_REGISTER_REQUEST,\n// USER_REGISTER_SUCCESS\n} from \"../Constants/UserContants\";\nimport axios from \"axios\";\n\n// LOGIN\nexport const login = (username, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\n    // `/api/users/login`,\n    `https://subscription-api-ddg3.onrender.com/auth/signin`, {\n      username,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// // LOGOUT\nexport const logout = () => async dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\n\n// REGISTER\n// export const register = (username, password, email) => async (dispatch) => {\n//   try {\n//     dispatch({ type: USER_REGISTER_REQUEST });\n\n//     const config = {\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//     };\n\n//     const { data } = await axios.post(\n//       `/auth/signup`,\n//       { username, password, email },\n//       config\n//     );\n//     dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n//     // dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n//     localStorage.setItem(\"userInfo\", JSON.stringify(data));\n//   } catch (error) {\n//     dispatch({\n//       type: USER_REGISTER_FAIL,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     });\n//   }\n// };","map":{"version":3,"names":["USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","axios","login","username","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem"],"sources":["D:/1_Java_Web/TEST/my-app/src/Redux/Actions/userActions.js"],"sourcesContent":["import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  // USER_REGISTER_FAIL,\r\n  // USER_REGISTER_REQUEST,\r\n  // USER_REGISTER_SUCCESS\r\n} from \"../Constants/UserContants\";\r\nimport axios from \"axios\";\r\n\r\n// LOGIN\r\nexport const login = (username, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      // `/api/users/login`,\r\n      `https://subscription-api-ddg3.onrender.com/auth/signin`,\r\n      { username, password },\r\n      config\r\n    );\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// // LOGOUT\r\nexport const logout = () => async (dispatch) => {\r\n\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n\r\n// REGISTER\r\n// export const register = (username, password, email) => async (dispatch) => {\r\n//   try {\r\n//     dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n//     const config = {\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//     };\r\n\r\n//     const { data } = await axios.post(\r\n//       `/auth/signup`,\r\n//       { username, password, email },\r\n//       config\r\n//     );\r\n//     dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n//     // dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n//     localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: USER_REGISTER_FAIL,\r\n//       payload:\r\n//         error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message,\r\n//     });\r\n//   }\r\n// };\r\n\r\n\r\n"],"mappings":"AAAA,SACEA,eAAe,EACfC,kBAAkB,EAClBC,kBAAkB,EAClBC;AACA;AACA;AACA;AAAA,OACK,2BAA2B;AAClC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,KAAK,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC/D,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAER;IAAmB,CAAC,CAAC;IAEtC,MAAMS,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IAED,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,IAAI;IAC/B;IACC,wDAAuD,EACxD;MAAEP,QAAQ;MAAEC;IAAS,CAAC,EACtBG,MACF,CAAC;IACDF,QAAQ,CAAC;MAAEC,IAAI,EAAEP,kBAAkB;MAAEY,OAAO,EAAEF;IAAK,CAAC,CAAC;IAErDG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;EACxD,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdX,QAAQ,CAAC;MACPC,IAAI,EAAET,eAAe;MACrBc,OAAO,EACLK,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM,MAAOd,QAAQ,IAAK;EAE9CO,YAAY,CAACQ,UAAU,CAAC,UAAU,CAAC;EACnCf,QAAQ,CAAC;IAAEC,IAAI,EAAEN;EAAY,CAAC,CAAC;AACjC,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}