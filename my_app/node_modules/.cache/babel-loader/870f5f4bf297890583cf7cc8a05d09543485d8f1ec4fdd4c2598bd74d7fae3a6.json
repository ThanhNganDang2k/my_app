{"ast":null,"code":"import { USER_FORGOT_PASSWORD_FAIL, USER_FORGOT_PASSWORD_REQUEST, USER_FORGOT_PASSWORD_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SEND_EMAIL_FAIL, USER_SEND_EMAIL_REQUEST, USER_SEND_EMAIL_SUCCESS } from \"../Constants/UserContants\";\nimport axios from \"axios\";\nimport userApi from \"../../api/userApi\";\n\n// LOGIN\nexport const login = (username, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const {\n      data\n    } = await userApi.login({\n      username,\n      password\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// LOGOUT\nexport const logout = () => async dispatch => {\n  await userApi.logout();\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n  // dispatch({ type: USER_DETAILS_RESET });\n  // dispatch({ type: ORDER_LIST_MY_RESET });\n};\n\n// REGISTER\nexport const register = (username, password, email) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const {\n      data\n    } = await userApi.register({\n      username,\n      password,\n      email\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    // dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error_reg) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error_reg.response && error_reg.response.data.message ? error_reg.response.data.message : error_reg.message\n    });\n  }\n};\n\n// // SEND EMAIL\nexport const sendEmail = email => async dispatch => {\n  try {\n    dispatch({\n      type: USER_SEND_EMAIL_REQUEST\n    });\n    const {\n      data\n    } = await userApi.sendemail({\n      email\n    });\n    dispatch({\n      type: USER_SEND_EMAIL_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_FORGOT_PASSWORD_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userEmail\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SEND_EMAIL_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// // FORGOT PASSWORD\nexport const forgotPassword = password => async dispatch => {\n  try {\n    dispatch({\n      type: USER_FORGOT_PASSWORD_REQUEST\n    });\n    const {\n      data\n    } = await userApi.forgotpassword({\n      password\n    });\n    dispatch({\n      type: USER_FORGOT_PASSWORD_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_FORGOT_PASSWORD_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["USER_FORGOT_PASSWORD_FAIL","USER_FORGOT_PASSWORD_REQUEST","USER_FORGOT_PASSWORD_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SEND_EMAIL_FAIL","USER_SEND_EMAIL_REQUEST","USER_SEND_EMAIL_SUCCESS","axios","userApi","login","username","password","dispatch","type","data","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","email","error_reg","sendEmail","sendemail","forgotPassword","forgotpassword"],"sources":["D:/1_Java_Web/TEST/my-app/src/Redux/Actions/userActions.js"],"sourcesContent":["import {\r\n  USER_FORGOT_PASSWORD_FAIL,\r\n  USER_FORGOT_PASSWORD_REQUEST,\r\n  USER_FORGOT_PASSWORD_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_SEND_EMAIL_FAIL,\r\n  USER_SEND_EMAIL_REQUEST,\r\n  USER_SEND_EMAIL_SUCCESS,\r\n} from \"../Constants/UserContants\";\r\nimport axios from \"axios\";\r\nimport userApi from \"../../api/userApi\";\r\n\r\n// LOGIN\r\nexport const login = (username, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n    const {data} =  await userApi.login({ username, password })\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// LOGOUT\r\nexport const logout = () => async (dispatch) => {\r\n  await userApi.logout();\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n  // dispatch({ type: USER_DETAILS_RESET });\r\n  // dispatch({ type: ORDER_LIST_MY_RESET });\r\n};\r\n\r\n// REGISTER\r\nexport const register = (username, password, email) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n    const { data } =  await userApi.register({ username, password, email })\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n    // dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error_reg) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n      error_reg.response && error_reg.response.data.message\r\n        ? error_reg.response.data.message\r\n        : error_reg.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\n// // SEND EMAIL\r\nexport const sendEmail = (email) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_SEND_EMAIL_REQUEST });\r\n    const {data} =  await userApi.sendemail({ email })\r\n    \r\n    dispatch({ type: USER_SEND_EMAIL_SUCCESS, payload: data });\r\n    dispatch({ type: USER_FORGOT_PASSWORD_SUCCESS, payload: data });\r\n    localStorage.setItem(\"userEmail\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_SEND_EMAIL_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\n// // FORGOT PASSWORD\r\nexport const forgotPassword = (password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_FORGOT_PASSWORD_REQUEST });\r\n    const {data} =  await userApi.forgotpassword({ password })\r\n    \r\n    dispatch({ type: USER_FORGOT_PASSWORD_SUCCESS, payload: data });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_FORGOT_PASSWORD_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}