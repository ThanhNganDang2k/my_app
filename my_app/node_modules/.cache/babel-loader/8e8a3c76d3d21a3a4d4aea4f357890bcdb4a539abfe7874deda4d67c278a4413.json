{"ast":null,"code":"import { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../Constants/UserContants\";\nimport axios from \"axios\";\n\n// LOGIN\nexport const login = (username, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\n    // `/api/users/login`,\n    `https://subscription-api-ddg3.onrender.com/auth/signin`, {\n      username,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// // LOGOUT\nexport const logout = () => async dispatch => {\n  // const config = {\n  //   headers: {\n  //     Authorization:\n  //     \"Bearer \" + JSON.parse(localStorage.getItem(\"currentUser\")).token,\n  //   },\n  // };\n\n  // const { data } = await axios.post(\n  //   // `/api/users/login`,\n  //   `https://subscription-api-ddg3.onrender.com/role/logout`,{\n  //     Authorization:\n  //     \"Bearer \" + JSON.parse(localStorage.getItem(\"data\")).accessToken\n  //   },\n  //   config\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\n\n// REGISTER\nexport const register = (username, password, email) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/auth/signup`, {\n      username,\n      password,\n      email\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    // dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// // USER DETAILS\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\n\n// UPDATE PROFILE\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","axios","login","username","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","email","getUserDetails","id","getState","USER_DETAILS_REQUEST","userLogin","userInfo","Authorization","token","get","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","updateUserProfile","user","USER_UPDATE_PROFILE_REQUEST","put","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL"],"sources":["D:/1_Java_Web/TEST/my-app/src/Redux/Actions/userActions.js"],"sourcesContent":["import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS\r\n} from \"../Constants/UserContants\";\r\nimport axios from \"axios\";\r\n\r\n// LOGIN\r\nexport const login = (username, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      // `/api/users/login`,\r\n      `https://subscription-api-ddg3.onrender.com/auth/signin`,\r\n      { username, password },\r\n      config\r\n    );\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// // LOGOUT\r\nexport const logout = () => async (dispatch) => {\r\n  // const config = {\r\n  //   headers: {\r\n  //     Authorization:\r\n  //     \"Bearer \" + JSON.parse(localStorage.getItem(\"currentUser\")).token,\r\n  //   },\r\n  // };\r\n\r\n  // const { data } = await axios.post(\r\n  //   // `/api/users/login`,\r\n  //   `https://subscription-api-ddg3.onrender.com/role/logout`,{\r\n  //     Authorization:\r\n  //     \"Bearer \" + JSON.parse(localStorage.getItem(\"data\")).accessToken\r\n  //   },\r\n  //   config\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// REGISTER\r\nexport const register = (username, password, email) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      `/auth/signup`,\r\n      { username, password, email },\r\n      config\r\n    );\r\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n    // dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n// // USER DETAILS\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DETAILS_REQUEST });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\n// UPDATE PROFILE\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\r\n    dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\r\n\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}